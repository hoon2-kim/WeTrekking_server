# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Mountain {
  id: String!
  mountain: String!
  address: String!
}

type User {
  id: String!
  email: String!
  name: String!
  nickname: String!
  birth: String!
  phone: String!
  gender: String!
  profile_img: String!
  point: Int!
}

type CrewBoard {
  id: String!
  title: String!
  description: String!
  date: String!
  dateTime: String!
  addressDetail: String!
  address: String!
  gender: String!
  dues: Int!
  peoples: Int!
  thumbnail: String!
  mountain: Mountain!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CrewBoardImage {
  id: String!
  imgUrl: String!
  isMain: Boolean!
  crewBoard: CrewBoard!
}

type CrewComment {
  id: String!
  comment: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  crewBoard: CrewBoard!
  user: User!
  subCrewComment: CrewComment!
}

type CrewUserList {
  id: String!
  status: String!
  user: User!
  crewBoard: CrewBoard!
}

type PointHistory {
  id: String!
  amount: Int!
  createdAt: DateTime!
  user: User!
}

type CrewBoardAndUser {
  id: String!
  title: String!
  description: String!
  date: String!
  dateTime: String!
  addressDetail: String!
  address: String!
  gender: String!
  dues: Int!
  peoples: Int!
  thumbnail: String!
  mountain: Mountain!
  user: User!
  dibUsers: [User!]!
  assignedUsers: [User!]!
  createdAt: DateTime!
  updatedAt: DateTime
}

type ReviewCount {
  id: String!
  reviewCount: Int!
  user: User!
}

type ReviewBoard {
  id: String!
  title: String!
  review: String!
  star: Float!
  like: Int!
  user: User!
  crewUserList: CrewUserList!
  createdAt: DateTime!
}

type ReviewBoardImage {
  id: String!
  imgUrl: String!
  isMain: Boolean!
  reviewBoard: ReviewBoard!
}

type ReviewComment {
  id: String!
  reviewComment: String
  createdAt: DateTime!
  deletedAt: DateTime!
  user: User!
  reviewBoard: ReviewBoard!
}

type Chat {
  name: String!
  roomName: String!
  message: String!
  createdAt: DateTime!
}

type Room {
  roomName: String!
  boardId: String!
  user: String!
}

type PointPayment {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_PAYMENT_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum POINT_PAYMENT_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type DibsWithCrewBoard {
  id: String!
  user: User!
  crewBoard: CrewBoardAndUser!
}

type Trekking {
  mountainName: String!
  coordinate: [[Float!]!]!
}

type TrekkingInfo {
  mountainName: String!
  trekkingName: String!
  difficulty: String!
  coordinate: [[Float!]!]!
}

type Query {
  """로그인한 유저의 이용내역 전체 조회"""
  fetchPointHistory(page: Int): [PointHistory!]!
  fetchTrekkingInfo(address: String!, mountainName: String!): Trekking!

  """산이름을 통해 좌표 반환"""
  fetchTrekkingCoordinate(mountainName: String!): [TrekkingInfo!]!
  fetchReviewBoardImage(reviewBoardId: String!): [ReviewBoardImage!]!
  fetchAllReviewBoardImages: [ReviewBoardImage!]!
  fetchMountain(mountainId: String!): Mountain!
  fetchAllMountains: [Mountain!]!
  fetchMountainsWithSearch(search: String!): [Mountain!]!
  fetchPointPayment: PointPayment!
  fetchPointPayments: [[PointPayment!]!]!
  checkCancellable(amount: Float!): Boolean!
  fetchDibs: [DibsWithCrewBoard!]!
  fetchCrewBoard(crewBoardId: String!): CrewBoard!
  fetchAllCrewBoards: [CrewBoard!]!
  fetchAllCrewBoardsWithUsers: [CrewBoardAndUser!]!
  fetchAllCrewBoardsWithDelete: [CrewBoard!]!
  fetchCrewBoardsLatestFirst(region: String!, startDate: String!, endDate: String!, search: String!): [CrewBoardAndUser!]!
  fetchCrewBoardsDeadlineFirst(region: String!, startDate: String!, endDate: String!, search: String!): [CrewBoardAndUser!]!
  fetchCrewBoardsBySearch(region: String!, startDate: String!, endDate: String!, search: String!): [CrewBoard!]!
  fetchCrewBoardsTEST: [[CrewBoard!]!]!
  fetchBoardImage(crewBoardId: String!): [CrewBoardImage!]!
  fetchAllCrewBoardImages: [CrewBoardImage!]!
  fetchCrewUserList: [[CrewUserList!]!]!
  fetchApplyList(crewBoardId: String!): [CrewUserList!]!
  fetchAcceptedList(crewBoardId: String!): [CrewUserList!]!
  fetchHostCrewList: [[CrewBoard!]!]!
  fetchVisitList: [CrewUserList!]!
  fetchReviewBoard(reviewBoardId: String!): ReviewBoard!
  fetchReviewBoards: [[ReviewBoard!]!]!
  fetchUser: User!
  fetchMountainKing: [ReviewCount!]!

  """boardId에 해당하는 댓글 전체 조회"""
  fetchCrewComments(boardId: String!, page: Int): [CrewComment!]!

  """userId에 해당하는 댓글 전체 조회"""
  fetchUserCrewComments(userId: String!, boardId: String!): [CrewComment!]!

  """commentId에 해당하는 대댓글 조회하기"""
  fetchCrewSubComments(commentId: String!, page: Int): [CrewComment!]!

  """userId와 boardId에 해당하는 대댓글 조회하기"""
  fetchUserCrewSubComments(userId: String!, boardId: String!): [CrewComment!]!
  fetchLogs(roomName: String!): [Chat!]!
  fetchChatUsers(boardId: String!): [CrewUserList!]!
  fetchReviewComments(reviewBoardId: String!, page: Int): [ReviewComment!]!
}

type Mutation {
  uploadReviewBoardImage(imgURL: [String!]!, reviewBoardId: String!): [ReviewBoardImage!]!
  likeReviewBoard(reviewBoardId: String!): String!
  createMountain: String!
  createPointPayment(impUid: String!, amount: Int!): PointPayment!
  cancelPointPayment(impUid: String!): PointPayment!
  createDib(crewBoardId: String!): Boolean!
  login(email: String!, password: String!): String!
  logout: String!
  restoreAccessToken: String!
  createCrewBoard(createCrewBoardInput: CreateCrewBoardInput!, imgURL: [String!]!, mountainId: String!): CrewBoard!
  createCrewBoardTEST(createCrewBoardInput: CreateCrewBoardInput!): CrewBoard!
  updateCrewBoard(crewBoardId: String!, updateCrewBoardInput: UpdateCrewBoardInput!, imgURL: [String!]!, mountainId: String!): CrewBoard!
  deleteCrewBoard(crewBoardId: String!): Boolean!
  uploadCrewBoardImage(imgURL: [String!]!, crewBoardId: String!): [CrewBoardImage!]!
  createCrewUserList(crewBoardId: String!): String!
  deleteCrewUserList(crewBoardId: String!): String!
  acceptCrew(id: String!): CrewUserList!
  rejectCrew(id: String!): CrewUserList!
  finishCrew(id: String!): CrewUserList!
  uploadFilesForCrewBoard(files: [Upload!]!): [String!]!
  uploadFilesForReviewBoard(files: [Upload!]!): [String!]!
  uploadFileForUserProfile(file: Upload!): String!
  sendTokenToPhone(phone: String!): String!
  checkTokenPhone(phone: String!, phoneToken: String!): String!
  createReviewBoard(createReviewBoardInput: CreateReviewBoardInput!, crewUserListId: String!, imgURL: [String!]!): ReviewBoard!
  updateReviewBoard(reviewBoardId: String!, updateReviewBoardInput: UpdateReviewBoardInput!, imgURL: [String!]!): ReviewBoard!
  deleteReviewBoard(reviewBoardId: String!): Boolean!
  findUserEmail(name: String!, phone: String!, phoneToken: String!): String!
  findUserPassword(name: String!, email: String!, phone: String!, phoneToken: String!): String!
  updatePassword(password: String!): String!
  checkEmail(email: String!): String!
  checkNickName(nickname: String!): String!
  socialUpdateUser(updateUserInput: UpdateUserInput!): User!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(email: String!, updateUserInput: UpdateUserInput!): User!
  deleteUser(userId: String!): Boolean!

  """댓글 생성하기"""
  createCrewComment(createCrewCommentInput: CreateCrewCommentInput!): CrewComment!

  """댓글 수정하기"""
  updateCrewComment(commentId: String!, updateCrewCommentInput: UpdateCrewCommentInput!): CrewComment!

  """댓글 삭제하기"""
  deleteCrewComment(commentId: String!): Boolean!

  """대댓글 생성하기"""
  createCrewSubComment(createSubCrewCommentInput: CreateSubCrewCommentInput!): CrewComment!

  """대댓글 수정하기"""
  updateCrewSubComment(subCommentId: String!, updateSubCrewCommentInput: UpdateSubCrewCommentInput!): CrewComment!

  """대댓글 삭제하기"""
  deleteCrewSubComment(subCommentId: String!): Boolean!
  createRoom(boardId: String!, roomName: String!): Room!
  createReviewComment(reviewBoardId: String!, reviewComment: String!): ReviewComment!
  updateReviewComment(updateReviewCommentInput: updateReviewCommentInput!): ReviewComment!
  deleteReviewComment(reviewCommentId: String!): Boolean!
}

input CreateCrewBoardInput {
  title: String!
  date: String!
  dateTime: String!
  address: String!
  addressDetail: String!
  dues: Int!
  description: String!
  gender: String!
  peoples: Int!
  thumbnail: String!
}

input UpdateCrewBoardInput {
  title: String
  date: String
  dateTime: String
  address: String
  addressDetail: String
  dues: Int
  description: String
  gender: String
  peoples: Int
  thumbnail: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateReviewBoardInput {
  title: String!
  review: String!
  star: Float!
}

input UpdateReviewBoardInput {
  title: String
  review: String
  star: Float
}

input UpdateUserInput {
  email: String
  password: String
  name: String
  nickname: String
  birth: String
  phone: String
  gender: String
  profile_img: String = "wetrekking-storage/userProfile/24d860b1-39ce-41fa-8d6b-0c4912ef1d74basic-profile.png"
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
  nickname: String
  birth: String
  phone: String
  gender: String
  profile_img: String = "wetrekking-storage/userProfile/24d860b1-39ce-41fa-8d6b-0c4912ef1d74basic-profile.png"
}

input CreateCrewCommentInput {
  comment: String!
  boardId: String!
}

input UpdateCrewCommentInput {
  comment: String
  boardId: String
}

input CreateSubCrewCommentInput {
  subComment: String!
  parentId: String!
}

input UpdateSubCrewCommentInput {
  subComment: String
  parentId: String
}

input updateReviewCommentInput {
  reviewCommentId: String
  comment: String
}